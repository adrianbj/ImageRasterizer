<?php

/**
 * Image Rasterizer Module
 *
 * @author Adrian Jones
 *
 * ProcessWire 2.x
 * Copyright (C) 2010 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

class ImageRasterizer extends WireData implements Module {

    /**
     * getModuleInfo is a module required by all modules to tell ProcessWire about them
     *
     * @return array
     *
     */
    public static function getModuleInfo() {

        return array(
            'title' => 'ImageRasterizer',
            'version' => 1,
            'summary' => 'Rasterizes vector SVG images',
            'href' => '',
            'singular' => true,
            'autoload' => true,
            );
    }

    /**
     * Initialize the module
     *
     * ProcessWire calls this when the module is loaded. For 'autoload' modules, this will be called
     * when ProcessWire's API is ready. As a result, this is a good place to attach hooks.
     *
     */
    public function init() {
        $this->addHookBefore('InputfieldFile::fileAdded', $this, 'rasterizeImage');
    }

    public function rasterizeImage(HookEvent $event){

        $field = $event->object;
        $inputfield = $this->fields->get($field->name);
        if(!$inputfield) return;
        if(!$inputfield->type instanceof FieldtypeImage) return;
        $image = $event->argumentsByName("pagefile");

        clearstatcache();
        $imagickImage = new Imagick();
        $imagickImage->setBackgroundColor(new ImagickPixel("transparent"));
        $imagickImage->readImage($image->filename);
        $imagickImage->setImageFormat("png32");
        $imagickImage->setImageDepth(8);
        $imagickImage->setImageColorSpace(imagick::COLORSPACE_RGB);
        $imagickImage->setImageType(imagick::IMGTYPE_TRUECOLORMATTE);
        $imagickImage->setOption("png:color-type","6");
        clearstatcache();
        $imagickImage->writeImage(str_replace('.svg','.png',$image->filename));
        $imagickImage->clear();
        $imagickImage->destroy();

        $page = $this->pages->get((int) $this->input->get->id);

        $page->$inputfield->add(str_replace('.svg','.png',$image->filename));
        $page->save($inputfield);

    }

}
